{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Luces","intensity","castShadow","position","Cubo","color","ref","useRef","useFrame","clock","current","rotation","y","Math","sin","elapsedTime","texture","useLoader","TextureLoader","process","attach","args","map","Floor","receiveShadow","PI","side","DoubleSide","App","className","shadows","OrbitControls","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAOMA,EAAQ,WACZ,OACE,kCACE,8BAAcC,UAAW,KACzB,kCAAkBC,YAAU,EAACC,SAAU,EAAE,EAAE,EAAE,SAK7CC,EAAO,SAAC,GAAqB,IAApBD,EAAmB,EAAnBA,SAAUE,EAAS,EAATA,MACjBC,EAAMC,mBACZC,aAAS,YAAY,IAAVC,EAAS,EAATA,MACTH,EAAII,QAAQC,SAASC,GAAI,GACzBN,EAAII,QAAQC,SAASC,EAAKC,KAAKC,IAAIL,EAAMM,gBAE3C,IAAMC,EAAUC,YAAUC,gBAAeC,wCACzC,OACE,uBAAMb,IAAKA,EAAKJ,YAAU,EAACC,SAAUA,EAArC,UACE,6BAAaiB,OAAO,WAAWC,KAAM,CAAC,EAAE,EAAE,KAC1C,sCAAsBD,OAAO,WAAWf,MAAOA,EAAOiB,IAAKN,QAK3DO,EAAQ,WACZ,OACE,uBAAMC,eAAa,EAACb,SAAU,EAAEE,KAAKY,GAAG,EAAG,EAAG,GAAItB,SAAU,CAAC,GAAG,GAAI,GAApE,UACE,qCAAqBiB,OAAO,WAAWC,KAAM,CAAC,GAAG,MACjD,sCAAsBD,OAAO,WAAWf,MAAM,QAAQqB,KAAMC,mBA0BnDC,MAnBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQC,SAAO,EAAf,UACE,+BACA,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,IACA,eAAC,WAAD,CAAUC,SAAU,KAApB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAM7B,SAAU,EAAE,IAAK,IAAI,GAAIE,MAAM,WACrC,cAAC,EAAD,CAAMF,SAAU,CAAC,EAAG,EAAE,GAAIE,MAAM,YAChC,cAAC,EAAD,CAAMF,SAAU,CAAC,IAAK,GAAI,GAAIE,MAAM,iBCzC/B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4914c7d2.chunk.js","sourcesContent":["import {Suspense, useRef} from 'react'\nimport './App.css';\nimport {Canvas, useLoader, useFrame} from '@react-three/fiber'\nimport {OrbitControls} from '@react-three/drei'\nimport {DoubleSide, TextureLoader} from 'three'\n\n\nconst Luces = ()=>{\n  return(\n    <group>\n      <ambientLight intensity={0.5}/>\n      <directionalLight castShadow position={[-4,3,3]}/>\n    </group>\n  )\n}\n\nconst Cubo = ({position, color})=>{\n  const ref = useRef()\n  useFrame(({clock})=>{\n    ref.current.rotation.y +=0.1\n    ref.current.rotation.y  = Math.sin(clock.elapsedTime)\n  })\n  const texture = useLoader(TextureLoader, process.env.PUBLIC_URL +'/box.jpg')\n  return(\n    <mesh ref={ref} castShadow position={position}>\n      <boxGeometry attach=\"geometry\" args={[1,1,1]}/>\n      <meshPhysicalMaterial attach=\"material\" color={color} map={texture}/>\n    </mesh>\n  )\n}\n\nconst Floor = ()=>{\n  return(\n    <mesh receiveShadow rotation={[-Math.PI/2, 0, 0]} position={[0,-0.5,0]}>\n      <planeBufferGeometry attach=\"geometry\" args={[10,10]}/>\n      <meshPhysicalMaterial attach=\"material\" color=\"green\" side={DoubleSide}/>\n    </mesh>\n  )\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas shadows>\n        <axesHelper/>\n        <Luces/>\n        <OrbitControls/>\n        <Suspense fallback={null}>\n          <Floor/>\n          <Cubo position={[-2.5, 1.5,0]} color=\"yellow\"/>\n          <Cubo position={[0, 1,0]} color=\"#81cefb\"/>\n          <Cubo position={[2.5, 0.5,0]} color=\"red\"/>\n        </Suspense>\n\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}